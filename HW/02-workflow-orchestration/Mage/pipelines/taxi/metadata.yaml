blocks:
- all_upstream_blocks_executed: true
  color: null
  configuration: {}
  downstream_blocks: []
  executor_config: null
  executor_type: local_python
  has_callback: false
  language: markdown
  name: Documentation for taxi
  retry_config: null
  status: updated
  timeout: null
  type: markdown
  upstream_blocks: []
  uuid: documentation_for_taxi
- all_upstream_blocks_executed: true
  color: null
  configuration: {}
  downstream_blocks: []
  executor_config: null
  executor_type: local_python
  has_callback: false
  language: markdown
  name: Documentation for taxi_load
  retry_config: null
  status: updated
  timeout: null
  type: markdown
  upstream_blocks: []
  uuid: documentation_for_taxi_load
- all_upstream_blocks_executed: true
  color: null
  configuration: {}
  downstream_blocks:
  - taxi_remove_columns
  executor_config: null
  executor_type: local_python
  has_callback: false
  language: python
  name: taxi_load
  retry_config: null
  status: executed
  timeout: null
  type: data_loader
  upstream_blocks: []
  uuid: taxi_load
- all_upstream_blocks_executed: true
  color: null
  configuration:
    data_provider: postgres
    data_provider_profile: dev
    dbt: {}
    disable_query_preprocessing: false
    export_write_policy: append
    limit: 1000
    use_raw_sql: true
  downstream_blocks: []
  executor_config: null
  executor_type: local_python
  has_callback: false
  language: sql
  name: test_postgres
  retry_config: null
  status: executed
  timeout: null
  type: data_loader
  upstream_blocks: []
  uuid: test_postgres
- all_upstream_blocks_executed: true
  color: null
  configuration: {}
  downstream_blocks: []
  executor_config: null
  executor_type: local_python
  has_callback: false
  language: markdown
  name: Documentation for taxi_remove_columns
  retry_config: null
  status: updated
  timeout: null
  type: markdown
  upstream_blocks: []
  uuid: documentation_for_taxi_remove_columns
- all_upstream_blocks_executed: true
  color: null
  configuration: {}
  downstream_blocks:
  - taxi_to_postgres
  executor_config: null
  executor_type: local_python
  has_callback: false
  language: python
  name: taxi_remove_columns
  retry_config: null
  status: executed
  timeout: null
  type: transformer
  upstream_blocks:
  - taxi_load
  uuid: taxi_remove_columns
- all_upstream_blocks_executed: true
  color: null
  configuration: {}
  downstream_blocks: []
  executor_config: null
  executor_type: local_python
  has_callback: false
  language: python
  name: taxi_to_postgres
  retry_config: null
  status: executed
  timeout: null
  type: data_exporter
  upstream_blocks:
  - taxi_remove_columns
  uuid: taxi_to_postgres
- all_upstream_blocks_executed: true
  color: null
  configuration:
    data_provider: postgres
    data_provider_profile: dev
    dbt: {}
    disable_query_preprocessing: false
    export_write_policy: append
    limit: 1000
    use_raw_sql: true
  downstream_blocks: []
  executor_config: null
  executor_type: local_python
  has_callback: false
  language: sql
  name: load_taxi_data
  retry_config: null
  status: executed
  timeout: null
  type: data_loader
  upstream_blocks: []
  uuid: load_taxi_data
- all_upstream_blocks_executed: true
  color: null
  configuration:
    data_provider: bigquery
    data_provider_profile: default
    dbt: {}
    disable_query_preprocessing: false
    export_write_policy: append
    limit: 1000
    use_raw_sql: true
  downstream_blocks: []
  executor_config: null
  executor_type: local_python
  has_callback: false
  language: sql
  name: test_BQ
  retry_config: null
  status: failed
  timeout: null
  type: data_loader
  upstream_blocks: []
  uuid: test_bq
cache_block_output_in_memory: false
callbacks: []
concurrency_config: {}
conditionals: []
created_at: '2024-02-06 07:26:04.199784+00:00'
data_integration: null
description: 'the selection should be performed along the columns.


  The action object is then passed to the execute_action function, which is also imported
  from the mage_ai library. This function takes in the action object and the DataFrame
  and executes the specified action. In this case, the execute_action function will
  select all the columns from the DataFrame and return the transformed DataFrame.


  Finally, the function returns the transformed DataFrame. This script can be used
  as part of a larger data pipeline, where it will be responsible for transforming
  the data before it is exported to another source.'
executor_config: {}
executor_count: 1
executor_type: null
extensions: {}
name: taxi
notification_config: {}
remote_variables_dir: null
retry_config: {}
run_pipeline_in_one_process: false
settings:
  triggers: null
spark_config: {}
tags: []
type: python
updated_at: '2024-02-06 15:21:05'
uuid: taxi
variables_dir: /home/src/mage_data/magic-zoomcamp
widgets: []
